<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgc.provider.mapper.GoodMapper">
    <resultMap id="BaseResultMap" type="com.kgc.provider.dto.Good">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="good_id" jdbcType="VARCHAR" property="goodId"/>
        <result column="good_name" jdbcType="VARCHAR" property="goodName"/>
        <result column="good_price" jdbcType="DOUBLE" property="goodPrice"/>
        <result column="good_stock" jdbcType="INTEGER" property="goodStock"/>
        <result column="good_sales" jdbcType="INTEGER" property="goodSales"/>
        <result column="shelf_time" jdbcType="TIMESTAMP" property="shelfTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="good_image" jdbcType="VARCHAR" property="goodImage"/>
        <result column="good_content" jdbcType="VARCHAR" property="goodContent"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="good_sort" jdbcType="INTEGER" property="goodSort"/>
        <result column="current_stock" jdbcType="INTEGER" property="currentStock"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, good_id, good_name, good_price, good_stock, good_sales, shelf_time, update_time,
        good_image, good_content, is_delete, good_sort, current_stock
    </sql>
    <select id="selectByExample" parameterType="com.kgc.provider.dto.GoodExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from goods
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from goods
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.kgc.provider.dto.GoodExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.kgc.provider.dto.Good">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into goods (id, good_id, good_name,
        good_price, good_stock, good_sales,
        shelf_time, update_time, good_image,
        good_content, is_delete, good_sort,
        current_stock)
        values (#{id,jdbcType=BIGINT}, #{goodId,jdbcType=VARCHAR}, #{goodName,jdbcType=VARCHAR},
        #{goodPrice,jdbcType=DOUBLE}, #{goodStock,jdbcType=INTEGER}, #{goodSales,jdbcType=INTEGER},
        #{shelfTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{goodImage,jdbcType=VARCHAR},
        #{goodContent,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, #{goodSort,jdbcType=INTEGER},
        #{currentStock,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.kgc.provider.dto.Good">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodId != null">
                good_id,
            </if>
            <if test="goodName != null">
                good_name,
            </if>
            <if test="goodPrice != null">
                good_price,
            </if>
            <if test="goodStock != null">
                good_stock,
            </if>
            <if test="goodSales != null">
                good_sales,
            </if>
            <if test="shelfTime != null">
                shelf_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="goodImage != null">
                good_image,
            </if>
            <if test="goodContent != null">
                good_content,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="goodSort != null">
                good_sort,
            </if>
            <if test="currentStock != null">
                current_stock,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="goodId != null">
                #{goodId,jdbcType=VARCHAR},
            </if>
            <if test="goodName != null">
                #{goodName,jdbcType=VARCHAR},
            </if>
            <if test="goodPrice != null">
                #{goodPrice,jdbcType=DOUBLE},
            </if>
            <if test="goodStock != null">
                #{goodStock,jdbcType=INTEGER},
            </if>
            <if test="goodSales != null">
                #{goodSales,jdbcType=INTEGER},
            </if>
            <if test="shelfTime != null">
                #{shelfTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="goodImage != null">
                #{goodImage,jdbcType=VARCHAR},
            </if>
            <if test="goodContent != null">
                #{goodContent,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="goodSort != null">
                #{goodSort,jdbcType=INTEGER},
            </if>
            <if test="currentStock != null">
                #{currentStock,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.kgc.provider.dto.GoodExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update goods
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.goodId != null">
                good_id = #{record.goodId,jdbcType=VARCHAR},
            </if>
            <if test="record.goodName != null">
                good_name = #{record.goodName,jdbcType=VARCHAR},
            </if>
            <if test="record.goodPrice != null">
                good_price = #{record.goodPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.goodStock != null">
                good_stock = #{record.goodStock,jdbcType=INTEGER},
            </if>
            <if test="record.goodSales != null">
                good_sales = #{record.goodSales,jdbcType=INTEGER},
            </if>
            <if test="record.shelfTime != null">
                shelf_time = #{record.shelfTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.goodImage != null">
                good_image = #{record.goodImage,jdbcType=VARCHAR},
            </if>
            <if test="record.goodContent != null">
                good_content = #{record.goodContent,jdbcType=VARCHAR},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=INTEGER},
            </if>
            <if test="record.goodSort != null">
                good_sort = #{record.goodSort,jdbcType=INTEGER},
            </if>
            <if test="record.currentStock != null">
                current_stock = #{record.currentStock,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update goods
        set id = #{record.id,jdbcType=BIGINT},
        good_id = #{record.goodId,jdbcType=VARCHAR},
        good_name = #{record.goodName,jdbcType=VARCHAR},
        good_price = #{record.goodPrice,jdbcType=DOUBLE},
        good_stock = #{record.goodStock,jdbcType=INTEGER},
        good_sales = #{record.goodSales,jdbcType=INTEGER},
        shelf_time = #{record.shelfTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        good_image = #{record.goodImage,jdbcType=VARCHAR},
        good_content = #{record.goodContent,jdbcType=VARCHAR},
        is_delete = #{record.isDelete,jdbcType=INTEGER},
        good_sort = #{record.goodSort,jdbcType=INTEGER},
        current_stock = #{record.currentStock,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.kgc.provider.dto.Good">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update goods
        <set>
            <if test="goodId != null">
                good_id = #{goodId,jdbcType=VARCHAR},
            </if>
            <if test="goodName != null">
                good_name = #{goodName,jdbcType=VARCHAR},
            </if>
            <if test="goodPrice != null">
                good_price = #{goodPrice,jdbcType=DOUBLE},
            </if>
            <if test="goodStock != null">
                good_stock = #{goodStock,jdbcType=INTEGER},
            </if>
            <if test="goodSales != null">
                good_sales = #{goodSales,jdbcType=INTEGER},
            </if>
            <if test="shelfTime != null">
                shelf_time = #{shelfTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="goodImage != null">
                good_image = #{goodImage,jdbcType=VARCHAR},
            </if>
            <if test="goodContent != null">
                good_content = #{goodContent,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="goodSort != null">
                good_sort = #{goodSort,jdbcType=INTEGER},
            </if>
            <if test="currentStock != null">
                current_stock = #{currentStock,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kgc.provider.dto.Good">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update goods
        set good_id = #{goodId,jdbcType=VARCHAR},
        good_name = #{goodName,jdbcType=VARCHAR},
        good_price = #{goodPrice,jdbcType=DOUBLE},
        good_stock = #{goodStock,jdbcType=INTEGER},
        good_sales = #{goodSales,jdbcType=INTEGER},
        shelf_time = #{shelfTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        good_image = #{goodImage,jdbcType=VARCHAR},
        good_content = #{goodContent,jdbcType=VARCHAR},
        is_delete = #{isDelete,jdbcType=INTEGER},
        good_sort = #{goodSort,jdbcType=INTEGER},
        current_stock = #{currentStock,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectBySort" resultMap="BaseResultMap">
    select * from goods where good_sort=#{goodSort} order By shelf_Time,good_sales DESC limit #{sPage},#{pSize}
  </select>
    <select id="selectHotGood" resultMap="BaseResultMap">
    SELECT * FROM goods ORDER BY good_sales DESC LIMIT 1
  </select>
    <select id="selectNewDate" resultMap="BaseResultMap">
    SELECT * FROM goods ORDER BY shelf_time DESC LIMIT 1
  </select>
    <select id="getAllGoods" resultMap="BaseResultMap">
    select * from goods where good_name like concat('%',#{goodName},'%') limit #{sPage},#{pSize}
    </select>
</mapper>