<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgc.provider.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.kgc.provider.dto.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="good_id" jdbcType="VARCHAR" property="goodId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="good_name" jdbcType="VARCHAR" property="goodName" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="good_integral" jdbcType="INTEGER" property="goodIntegral" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="good_price" jdbcType="DOUBLE" property="goodPrice" />
    <result column="good_amount" jdbcType="INTEGER" property="goodAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, good_id, user_id, `status`, code, create_time, phone, good_name, is_delete, good_integral, 
    address, good_price, good_amount
  </sql>
  <select id="selectByExample" parameterType="com.kgc.provider.dto.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from orders
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kgc.provider.dto.OrderExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kgc.provider.dto.Order">
    insert into orders (id, good_id, user_id, 
      `status`, code, create_time, 
      phone, good_name, is_delete, 
      good_integral, address, good_price, 
      good_amount)
    values (#{id,jdbcType=BIGINT}, #{goodId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{phone,jdbcType=VARCHAR}, #{goodName,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, 
      #{goodIntegral,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{goodPrice,jdbcType=DOUBLE}, 
      #{goodAmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.provider.dto.Order">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="goodName != null">
        good_name,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="goodIntegral != null">
        good_integral,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="goodPrice != null">
        good_price,
      </if>
      <if test="goodAmount != null">
        good_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="goodIntegral != null">
        #{goodIntegral,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="goodPrice != null">
        #{goodPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodAmount != null">
        #{goodAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kgc.provider.dto.OrderExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.goodName != null">
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.goodIntegral != null">
        good_integral = #{record.goodIntegral,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.goodPrice != null">
        good_price = #{record.goodPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodAmount != null">
        good_amount = #{record.goodAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set id = #{record.id,jdbcType=BIGINT},
      good_id = #{record.goodId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      phone = #{record.phone,jdbcType=VARCHAR},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      good_integral = #{record.goodIntegral,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      good_price = #{record.goodPrice,jdbcType=DOUBLE},
      good_amount = #{record.goodAmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.provider.dto.Order">
    update orders
    <set>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null">
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="goodIntegral != null">
        good_integral = #{goodIntegral,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="goodPrice != null">
        good_price = #{goodPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodAmount != null">
        good_amount = #{goodAmount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.provider.dto.Order">
    update orders
    set good_id = #{goodId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      good_name = #{goodName,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      good_integral = #{goodIntegral,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      good_price = #{goodPrice,jdbcType=DOUBLE},
      good_amount = #{goodAmount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="highPraise" resultType="java.lang.Integer">
    select count(0) from orders where good_id = #{gid} and good_integral >= 8
    </select>
  <select id="totalOrder" resultType="java.lang.Integer">
    select count(0) from orders where good_id = #{gid}
    </select>
  <select id="getGoodList" parameterType="com.kgc.provider.dto.Order" resultMap="BaseResultMap">
    select * from orders
    where
    1=1
    <if test="goodId != null">
      and good_id = #{goodId,jdbcType=VARCHAR}
    </if>
    <if test="userId != null">
      and user_id = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="status != null">
      and `status` = #{status,jdbcType=INTEGER}
    </if>
    <if test="code != null">
      and code like CONCAT('%',#{code},'%')
    </if>
    <if test="createTime != null">
      and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="phone != null">
      and phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="goodName != null">
      and good_name like CONCAT('%',#{goodName},'%')
    </if>
    <if test="isDelete != null">
      and is_delete = #{isDelete,jdbcType=INTEGER}
    </if>
    <if test="goodIntegral != null">
      and good_integral = #{goodIntegral,jdbcType=INTEGER}
    </if>
    <if test="address != null">
      and address = #{address,jdbcType=VARCHAR}
    </if>
    <if test="goodAmount != null">
      and good_amount = #{goodAmount,jdbcType=INTEGER}
    </if>
    <if test="goodPrice != null">
      and good_price = #{goodPrice,jdbcType=DOUBLE}
    </if>
    <if test="orderType != null">
      and order_type = #{orderType,jdbcType=INTEGER}
    </if>
    order by create_time desc
    <if test="startPage != null || pageSize != null">
      limit #{startPage,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>
  <select id="count" parameterType="com.kgc.provider.dto.Order" resultType="java.lang.Integer">
    select count(*) from orders
    where
    1=1
    <if test="goodId != null">
      and good_id = #{goodId,jdbcType=VARCHAR}
    </if>
    <if test="userId != null">
      and user_id = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="status != null">
      and `status` = #{status,jdbcType=INTEGER}
    </if>
    <if test="code != null">
      and code like CONCAT('%',#{code},'%')
    </if>
    <if test="createTime != null">
      and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="phone != null">
      and phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="goodName != null">
      and good_name like CONCAT('%',#{goodName},'%')
    </if>
    <if test="isDelete != null">
      and is_delete = #{isDelete,jdbcType=INTEGER}
    </if>
    <if test="goodIntegral != null">
      and good_integral = #{goodIntegral,jdbcType=INTEGER}
    </if>
    <if test="address != null">
      and address = #{address,jdbcType=VARCHAR}
    </if>
    <if test="goodAmount != null">
      and good_amount = #{goodAmount,jdbcType=INTEGER}
    </if>
    <if test="goodPrice != null">
      and good_price = #{goodPrice,jdbcType=DOUBLE}
    </if>

  </select>

  <update id="isDel" parameterType="int">
    update orders
    set is_delete = 1
    where id = #{id}
  </update>

  <update id="updateGoodIntegral">
    update orders
    set good_integral = #{score,jdbcType=INTEGER}
    where id = #{id}
  </update>

  <update id="cutStock">
   update orders
    set good_stock=good_stock-1 where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>